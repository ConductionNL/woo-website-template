{"version":3,"file":"6433-72f1a5d2c6613e07d308.js","mappings":"wNAEA,MACMA,EAAW,MACfC,YAAYC,IACV,IAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,aAAc,IAAAC,GAAYF,KAAM,cAAe,GACpDA,KAAKG,eAAgB,IAAAD,GAAYF,KAAM,gBAAiB,GACxDA,KAAKI,cAAe,IAAAF,GAAYF,KAAM,eAAgB,GACtDA,KAAKK,cAAe,IAAAH,GAAYF,KAAM,eAAgB,GACtDA,KAAKM,UAAW,EAChBN,KAAKO,UAAW,EAChBP,KAAKQ,SAAU,EACfR,KAAKS,MAAQ,EACf,CACAC,SACE,MAAM,QACJF,EAAO,SACPF,EAAQ,MACRG,GACET,KACJ,OAAO,IAAAW,GAAE,QAAS,CAChBC,OAAO,IAAAV,GAAK,oBACZW,KAAM,WACNL,QAASA,EACTF,SAAUA,EACVG,MAAOA,EACPK,OAAQC,GAAOf,KAAKC,YAAYe,KAAKD,GACrCE,SAAUF,GAAOf,KAAKG,cAAca,KAAKD,GACzCG,QAASH,GAAOf,KAAKI,aAAaY,KAAKD,GACvCI,QAASJ,IACPf,KAAKQ,QAAUO,EAAIK,OAAOZ,QAC1BR,KAAKK,aAAaW,KAAKD,EAAI,GAGjC,GAEFnB,EAASyB,MAnCQ,k5C","sources":["webpack://product-website-template/./node_modules/@utrecht/web-component-library-stencil/dist/esm/utrecht-checkbox.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-738f8f6d.js';\nimport { c as clsx } from './clsx.m-9f200cc0.js';\nconst indexCss = \".utrecht-checkbox{margin-block-end:0;margin-block-start:0;margin-inline-end:0;margin-inline-start:0;cursor:var(--utrecht-action-activate-cursor, revert);-webkit-user-select:none;user-select:none}.utrecht-checkbox--disabled{cursor:var(--utrecht-action-disabled-cursor, revert)}.utrecht-checkbox--focus-visible{--_utrecht-focus-ring-box-shadow:0 0 0 var(--utrecht-focus-outline-width, 0)\\n    var(--utrecht-focus-inverse-outline-color, transparent);box-shadow:var(--_utrecht-focus-ring-box-shadow);outline-color:var(--utrecht-focus-outline-color, revert);outline-offset:var(--utrecht-focus-outline-offset, revert);outline-style:var(--utrecht-focus-outline-style, revert);outline-width:var(--utrecht-focus-outline-width, revert)}.utrecht-checkbox--html-input:disabled{cursor:var(--utrecht-action-disabled-cursor, revert)}.utrecht-checkbox--html-input:focus{--_utrecht-focus-ring-box-shadow:0 0 0 var(--utrecht-focus-outline-width, 0)\\n    var(--utrecht-focus-inverse-outline-color, transparent);box-shadow:var(--_utrecht-focus-ring-box-shadow);outline-color:var(--utrecht-focus-outline-color, revert);outline-offset:var(--utrecht-focus-outline-offset, revert);outline-style:var(--utrecht-focus-outline-style, revert);outline-width:var(--utrecht-focus-outline-width, revert)}.utrecht-checkbox--html-input:focus:not(:focus-visible){box-shadow:none;outline-style:revert}:host{display:block}:host([hidden]){display:none !important}\";\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.utrechtBlur = createEvent(this, \"utrechtBlur\", 7);\n    this.utrechtChange = createEvent(this, \"utrechtChange\", 7);\n    this.utrechtFocus = createEvent(this, \"utrechtFocus\", 7);\n    this.utrechtInput = createEvent(this, \"utrechtInput\", 7);\n    this.disabled = false;\n    this.readOnly = false;\n    this.checked = false;\n    this.value = '';\n  }\n  render() {\n    const {\n      checked,\n      disabled,\n      value\n    } = this;\n    return h(\"input\", {\n      class: clsx('utrecht-checkbox'),\n      type: \"checkbox\",\n      checked: checked,\n      disabled: disabled,\n      value: value,\n      onBlur: evt => this.utrechtBlur.emit(evt),\n      onChange: evt => this.utrechtChange.emit(evt),\n      onFocus: evt => this.utrechtFocus.emit(evt),\n      onInput: evt => {\n        this.checked = evt.target.checked;\n        this.utrechtInput.emit(evt);\n      }\n    });\n  }\n};\nCheckbox.style = indexCss;\nexport { Checkbox as utrecht_checkbox };"],"names":["Checkbox","constructor","hostRef","r","this","utrechtBlur","c","utrechtChange","utrechtFocus","utrechtInput","disabled","readOnly","checked","value","render","h","class","type","onBlur","evt","emit","onChange","onFocus","onInput","target","style"],"sourceRoot":""}